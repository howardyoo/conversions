version = '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    /*
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'test_resources'
            srcDir 'test_converted'
        }
    }
     */
}

dependencies
{
    compile 'org.apache.logging.log4j:log4j-api:2.9.1'
    compile 'org.apache.logging.log4j:log4j-core:2.9.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.2'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.2'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.google.code.gson:gson:2.6.2'
    compile project(':wavefront-java-sdk')
    testCompile  'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile  'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

repositories
{
    mavenCentral ()
    jcenter ()
    mavenLocal ()
}

task (convertDatadog, dependsOn: 'classes', type: JavaExec) {
    main = 'com.wavefront.labs.convert.Convert'
    classpath = sourceSets.main.runtimeClasspath
    args 'datadog.properties', 'test_resources/datadog'
}

jar {
    manifest {
        attributes "Main-Class": "com.wavefront.labs.convert.Convert"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


